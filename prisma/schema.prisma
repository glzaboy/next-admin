generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id     Int     @id @default(autoincrement())
  /// 头像
  avatar String? @db.VarChar(255)
  name   String? @unique @db.VarChar(255)
  login  Login[]
  posts  Post[]
}

model Login {
  id         Int       @id @default(autoincrement())
  type       LoginType @default(PASSWORD)
  accessName String    @db.VarChar(255)
  accessPwd  String?   @db.VarChar(128)
  userId     Int
  createAt   DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  login      User      @relation(fields: [userId], references: [id])

  @@index([type, accessName])
  @@index([userId], map: "Login_userId_fkey")
}

model Post {
  id          BigInt              @id @default(autoincrement())
  authorId    Int
  title       String              @db.VarChar(255)
  contentId   BigInt              @unique
  categories  CategoriesOnPosts[]
  author      User                @relation(fields: [authorId], references: [id])
  postContent PostContent         @relation(fields: [contentId], references: [id])

  @@index([title])
  @@index([authorId], map: "Post_authorId_fkey")
}

model PostContent {
  id      BigInt @id @default(autoincrement())
  content String @db.VarChar(255)
  Post    Post?
}

model Category {
  id    Int                 @id @default(autoincrement())
  cat   String
  posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  postId     BigInt
  categoryId Int
  assignedAt DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])

  @@id([postId, categoryId])
  @@index([categoryId], map: "CategoriesOnPosts_categoryId_fkey")
}

enum LoginType {
  PASSWORD
  EMAIL
}
